// GO CONCURRENCY TASK
//

package main

import (
	"sync"
	"time"
)

// connection's holdUntil time is being set to 3 seconds when getting connected
// implement function, checking if connection's holdUntil time exceeded current time
func (c *connection) isActive() bool {
	return time.Now().Before(c.holdUntil)
}

func main() {
	runMockServer()
	defer checkSuccess()

	var wg sync.WaitGroup

	// handle here all requests located in activeRequest channel
	// use `handleRequest(r request)` function
	for r := range activeRequests {
		wg.Add(1)
		go func(r request) {
			handleRequest(r)
			wg.Done()
		}(r)
	}

	wg.Wait()
}
